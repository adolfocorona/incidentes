{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Students = function Students(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([{\n      tipo: 'Denuncias Penales',\n      descripcion: 'Relacionadas con actividades delictivas. Pueden incluir delitos como robo, fraude, agresión, etc.'\n    }, {\n      tipo: 'Denuncias Civiles',\n      descripcion: 'Se presentan en casos de disputas entre individuos, como casos de negligencia, disputas contractuales, daños y perjuicios, entre otros.'\n    }, {\n      tipo: 'Denuncias Laborales',\n      descripcion: 'Relativas a cuestiones en el lugar de trabajo, como acoso laboral, discriminación, violaciones de derechos laborales, etc.'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    denuncias = _useState2[0],\n    setDenuncias = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDenuncia = _useState4[0],\n    setSelectedDenuncia = _useState4[1];\n  var toggleDenuncia = function toggleDenuncia(index) {\n    if (selectedDenuncia === index) {\n      setSelectedDenuncia(null);\n    } else {\n      setSelectedDenuncia(index);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../images/municipioqueretaro.png\"),\n      style: styles.image\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Bienvenido a la p\\xE1gina para estudiantes\"\n    }), _jsx(ScrollView, {\n      style: styles.denunciasContainer,\n      children: denuncias.map(function (denuncia, index) {\n        return _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            style: [styles.denunciaButton, selectedDenuncia === index && styles.selectedButton],\n            onPress: function onPress() {\n              return toggleDenuncia(index);\n            },\n            children: _jsx(Text, {\n              style: styles.denunciaButtonText,\n              children: denuncia.tipo\n            })\n          }), selectedDenuncia === index && _jsx(Text, {\n            style: styles.denunciaDescripcion,\n            children: denuncia.descripcion\n          })]\n        }, index);\n      })\n    }), _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert('Reporte');\n      },\n      style: styles.reportButton,\n      children: [_jsx(FontAwesome, {\n        name: \"bar-chart\",\n        size: 30,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Reporte\"\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return alert('Implementa la lógica de cierre de sesión');\n      },\n      children: [_jsx(FontAwesome, {\n        name: \"sign-out\",\n        size: 30,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Cerrar Sesi\\xF3n\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  image: {\n    width: 200,\n    height: 200,\n    resizeMode: 'contain',\n    marginBottom: 20\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#0073e6',\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  reportButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#34A853',\n    padding: 10,\n    borderRadius: 10,\n    marginBottom: 10\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 20,\n    marginLeft: 10\n  },\n  denunciasContainer: {\n    width: '100%',\n    marginTop: 20\n  },\n  denunciaButton: {\n    backgroundColor: 'red',\n    padding: 10,\n    borderRadius: 10,\n    marginVertical: 5\n  },\n  selectedButton: {\n    backgroundColor: 'darkred'\n  },\n  denunciaButtonText: {\n    color: 'white',\n    fontSize: 18\n  },\n  denunciaDescripcion: {\n    backgroundColor: 'white',\n    padding: 10,\n    borderTopWidth: 1,\n    borderTopColor: 'black'\n  }\n});\nexport default Students;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Image","StyleSheet","ScrollView","FontAwesome","jsx","_jsx","jsxs","_jsxs","Students","_ref","navigation","_useState","tipo","descripcion","_useState2","_slicedToArray","denuncias","setDenuncias","_useState3","_useState4","selectedDenuncia","setSelectedDenuncia","toggleDenuncia","index","style","styles","container","children","source","require","image","title","denunciasContainer","map","denuncia","denunciaButton","selectedButton","onPress","denunciaButtonText","denunciaDescripcion","alert","reportButton","name","size","color","buttonText","button","create","flex","justifyContent","alignItems","paddingHorizontal","fontSize","fontWeight","marginBottom","width","height","resizeMode","flexDirection","backgroundColor","padding","borderRadius","marginLeft","marginTop","marginVertical","borderTopWidth","borderTopColor"],"sources":["C:/Users/ANIBAL/incidents-app/incidentes/src/pages/Students.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Image, StyleSheet, ScrollView } from 'react-native';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nconst Students = ({ navigation }) => {\r\n  const [denuncias, setDenuncias] = useState([\r\n    {\r\n      tipo: 'Denuncias Penales',\r\n      descripcion:\r\n        'Relacionadas con actividades delictivas. Pueden incluir delitos como robo, fraude, agresión, etc.',\r\n    },\r\n    {\r\n      tipo: 'Denuncias Civiles',\r\n      descripcion:\r\n        'Se presentan en casos de disputas entre individuos, como casos de negligencia, disputas contractuales, daños y perjuicios, entre otros.',\r\n    },\r\n    {\r\n      tipo: 'Denuncias Laborales',\r\n      descripcion:\r\n        'Relativas a cuestiones en el lugar de trabajo, como acoso laboral, discriminación, violaciones de derechos laborales, etc.',\r\n    },\r\n    // Agrega más categorías de denuncias aquí\r\n  ]);\r\n\r\n  const [selectedDenuncia, setSelectedDenuncia] = useState(null);\r\n\r\n  const toggleDenuncia = (index) => {\r\n    if (selectedDenuncia === index) {\r\n      setSelectedDenuncia(null);\r\n    } else {\r\n      setSelectedDenuncia(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        source={require('../images/municipioqueretaro.png')}\r\n        style={styles.image}\r\n      />\r\n      <Text style={styles.title}>Bienvenido a la página para estudiantes</Text>\r\n\r\n      {/* Lista de Botones de Denuncias */}\r\n      <ScrollView style={styles.denunciasContainer}>\r\n        {denuncias.map((denuncia, index) => (\r\n          <View key={index}>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.denunciaButton,\r\n                selectedDenuncia === index && styles.selectedButton,\r\n              ]}\r\n              onPress={() => toggleDenuncia(index)}\r\n            >\r\n              <Text style={styles.denunciaButtonText}>{denuncia.tipo}</Text>\r\n            </TouchableOpacity>\r\n            {selectedDenuncia === index && (\r\n              <Text style={styles.denunciaDescripcion}>{denuncia.descripcion}</Text>\r\n            )}\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n\r\n      <TouchableOpacity onPress={() => alert('Reporte')} style={styles.reportButton}>\r\n        <FontAwesome name=\"bar-chart\" size={30} color=\"white\" />\r\n        <Text style={styles.buttonText}>Reporte</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => alert('Implementa la lógica de cierre de sesión')}\r\n      >\r\n        <FontAwesome name=\"sign-out\" size={30} color=\"white\" />\r\n        <Text style={styles.buttonText}>Cerrar Sesión</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 200,\r\n    resizeMode: 'contain',\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#0073e6',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n  reportButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#34A853', // Color verde para el botón de Reporte\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    marginLeft: 10,\r\n  },\r\n  denunciasContainer: {\r\n    width: '100%',\r\n    marginTop: 20,\r\n  },\r\n  denunciaButton: {\r\n    backgroundColor: 'red', // Color de fondo rojo para los botones de denuncias\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginVertical: 5,\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: 'darkred', // Color de fondo más oscuro cuando está seleccionado\r\n  },\r\n  denunciaButtonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n  },\r\n  denunciaDescripcion: {\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    borderTopWidth: 1,\r\n    borderTopColor: 'black',\r\n  },\r\n});\r\n\r\nexport default Students;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}